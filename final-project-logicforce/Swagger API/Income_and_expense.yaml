openapi: 3.0.3
info:
  title: Expense Tracking API - Income and Expense Tracking
  description: API for tracking multiple income sources, categorizing expenses, and adding notes/tags
  version: '1.0'
servers:
  - url: http://localhost:9000
    description: Local development environment

paths:
  /users/{userId}/income:
    post:
      operationId: addIncome
      description: Add an income entry for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
            example:
              source: "Freelance"
              amount: 2000.00
              dateReceived: "2023-05-01"
              isRecurring: false
      responses:
        201:
          description: Income entry added successfully
    get:
      operationId: getIncome
      description: Retrieve all income entries for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
      responses:
        200:
          description: List of all income entries for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Income'

  /users/{userId}/income/{incomeId}:
    put:
      operationId: updateIncome
      description: Update an existing income entry for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
        - name: incomeId
          in: path
          required: true
          schema:
            type: string
            example: "income123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
            example:
              source: "Updated Freelance"
              amount: 2500.00
              dateReceived: "2023-05-10"
              isRecurring: true
      responses:
        200:
          description: Income entry updated successfully
    delete:
      operationId: deleteIncome
      description: Delete an income entry for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
        - name: incomeId
          in: path
          required: true
          schema:
            type: string
            example: "income123"
      responses:
        204:
          description: Income entry deleted successfully

  /users/{userId}/expense:
    post:
      operationId: addExpense
      description: Add an expense entry with category and tags
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
            example:
              category: "Groceries"
              amount: 150.75
              dateIncurred: "2023-05-02"
              isRecurring: false
              notes: "Weekly shopping"
              tags: ["food", "weekly"]
      responses:
        201:
          description: Expense entry added successfully
    get:
      operationId: getExpense
      description: Retrieve all expense entries for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
      responses:
        200:
          description: List of all expense entries for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'

  /users/{userId}/expense/{expenseId}:
    put:
      operationId: updateExpense
      description: Update an existing expense entry for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
        - name: expenseId
          in: path
          required: true
          schema:
            type: string
            example: "expense123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
            example:
              category: "Updated Groceries"
              amount: 180.00
              dateIncurred: "2023-05-05"
              isRecurring: true
              notes: "Updated weekly shopping"
              tags: ["food", "weekly", "updated"]
      responses:
        200:
          description: Expense entry updated successfully
    delete:
      operationId: deleteExpense
      description: Delete an expense entry for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
        - name: expenseId
          in: path
          required: true
          schema:
            type: string
            example: "expense123"
      responses:
        204:
          description: Expense entry deleted successfully

components:
  schemas:
    Income:
      type: object
      properties:
        incomeId:
          type: string
          example: "income123"
        source:
          type: string
          example: "Freelance"
        amount:
          type: number
          example: 2000.00
        dateReceived:
          type: string
          format: date
          example: "2023-05-01"
        isRecurring:
          type: boolean
          example: false
    Expense:
      type: object
      properties:
        expenseId:
          type: string
          example: "expense123"
        category:
          type: string
          example: "Groceries"
        amount:
          type: number
          example: 150.75
        dateIncurred:
          type: string
          format: date
          example: "2023-05-02"
        isRecurring:
          type: boolean
          example: false
        notes:
          type: string
          example: "Weekly shopping"
        tags:
          type: array
          items:
            type: string
          example: ["food", "weekly"]
